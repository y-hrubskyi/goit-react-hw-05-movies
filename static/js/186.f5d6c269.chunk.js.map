{"version":3,"file":"static/js/186.f5d6c269.chunk.js","mappings":"8LAiCA,UA5BgB,WAAO,IAADA,EACZC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAuCC,EAAAA,EAAAA,GAAW,UAADC,OACrCJ,EAAO,YACjB,CAAC,GACFK,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,MAHQK,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAOJ,EAAPI,QAK1B,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHF,IAAWG,EAAAA,EAAAA,KAAA,OAAAD,SAAK,4BAChBH,IAAaI,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAChB,OAAJN,QAAI,IAAJA,GAAa,QAATR,EAAJQ,EAAMO,eAAO,IAAAf,GAAbA,EAAegB,QACdH,EAAAA,EAAAA,KAAA,MAAAD,SACGJ,EAAKO,QAAQE,KAAI,SAAAC,GAAI,OACpBP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAKC,UACTN,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAKE,YAFFF,EAAKG,GAGT,MAIT,mBAIR,C,gHC3BAC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMhB,IAAMC,EAAmB,SAACC,EAAOC,GAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,MAAO,CAAElB,WAAW,EAAMC,SAAS,GACrC,IAAK,gBACH,MAAO,CACLD,WAAW,EACXC,SAAS,EACTF,KAAMkB,EAAOE,SAEjB,IAAK,gBACH,MAAO,CAAEnB,WAAW,EAAOC,SAAS,GACtC,QACE,OAAOe,EAEb,EAEarB,EAAa,SAACyB,EAAYC,GACrC,IAAAC,GAAsBC,EAAAA,EAAAA,UAASH,GAAWI,GAAA1B,EAAAA,EAAAA,GAAAwB,EAAA,GAAnCG,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAA0BC,EAAAA,EAAAA,YAAWb,EAAkB,CACrDf,WAAW,EACXC,SAAS,EACTF,KAAMsB,IACNQ,GAAA/B,EAAAA,EAAAA,GAAA6B,EAAA,GAJKX,EAAKa,EAAA,GAAEC,EAAQD,EAAA,GAuBtB,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAEA,IAAMO,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACiB,OAAjCV,EAAS,CAAEZ,KAAM,eAAgBoB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGV3B,EAAAA,EAAAA,GAAMY,GAAK,KAAD,EAAzBY,EAAMC,EAAAG,KACZX,EAAS,CAAEZ,KAAM,gBAAiBC,QAASkB,EAAOtC,OAAQuC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAE1DR,EAAS,CAAEZ,KAAM,kBAAmB,yBAAAoB,EAAAK,OAAA,GAAAP,EAAA,kBAEvC,kBATc,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAWfb,GAbgB,CAclB,GAAG,CAACP,IAEG,CAACT,EAAOU,EACjB,C","sources":["components/Reviews/Reviews.jsx","hooks/useDataApi.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nimport { useDataApi } from 'hooks/useDataApi';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [{ data, isLoading, isError }] = useDataApi(\n    `/movie/${movieId}/reviews`,\n    {}\n  );\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      {isError && <div>Something went wrong...</div>}\n      {isLoading && <Loader />}\n      {data?.results?.length ? (\n        <ul>\n          {data.results.map(item => (\n            <li key={item.id}>\n              <p>{item.author}</p>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'No any reviews'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return { isLoading: false, isError: true };\n    default:\n      return state;\n  }\n};\n\nexport const useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(url);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' });\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return [state, setUrl];\n};\n"],"names":["_data$results","movieId","useParams","_useDataApi","useDataApi","concat","_useDataApi2$","_slicedToArray","data","isLoading","isError","_jsxs","children","_jsx","Loader","results","length","map","item","author","content","id","axios","api_key","dataFetchReducer","state","action","type","payload","initialUrl","initialData","_useState","useState","_useState2","url","setUrl","_useReducer","useReducer","_useReducer2","dispatch","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","sent","t0","stop","apply","arguments"],"sourceRoot":""}