{"version":3,"file":"static/js/134.aa77076e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","hooks/useDataApi.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\n\nexport default function MoviesList({ data, isLoading, isError }) {\n  const location = useLocation();\n\n  return (\n    <>\n      {isError && <div>Something went wrong...</div>}\n      {isLoading && <Loader />}\n      {data?.results?.length > 0 ? (\n        <ul>\n          {data.results.map(({ id, name, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {name || title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'No results'\n      )}\n    </>\n  );\n}\n","import { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return { isLoading: false, isError: true };\n    default:\n      return state;\n  }\n};\n\nexport default function useDataApi(initialUrl, initialData) {\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(url);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' });\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return [state, setUrl];\n}\n","import { useSearchParams } from 'react-router-dom';\nimport useDataApi from 'hooks/useDataApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\n    query ? `/search/movie?query=${query}` : '',\n    { movies: [] }\n  );\n\n  const handleChange = e => {\n    const query = e.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      alert(\"Enter movie's name!\");\n      return;\n    }\n\n    doFetch(`/search/movie?query=${query}`);\n  };\n\n  return (\n    <div>\n      <h1>Search</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList data={data} isLoading={isLoading} isError={isError} />\n    </div>\n  );\n}\n"],"names":["MoviesList","_ref","_data$results","data","isLoading","isError","location","useLocation","_jsxs","_Fragment","children","_jsx","Loader","results","length","map","_ref2","id","name","title","Link","to","concat","state","from","axios","api_key","dataFetchReducer","action","type","payload","useDataApi","initialUrl","initialData","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useReducer","useReducer","_useReducer2","dispatch","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","sent","t0","stop","apply","arguments","Movies","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useDataApi","movies","_useDataApi2","_useDataApi2$","doFetch","onSubmit","e","preventDefault","alert","value","onChange","target"],"sourceRoot":""}